Option Explicit


Function WriteToFileFSO(textToWrite As Variant)
Dim fso As Object
Dim txtFile As Object
Dim filePath As String


' Set the file path
filePath = ThisWorkbook.Path & "\file.txt"

Set fso = CreateObject("Scripting.FileSystemObject")

' Create a new text file or overwrite if it already exists
Set txtFile = fso.CreateTextFile(filePath, True)

' Write text to the file
txtFile.WriteLine textToWrite

' Close the file
txtFile.Close

' Cleanup
Set txtFile = Nothing
Set fso = Nothing

Debug.Print "Text written to file successfully."
End Function



Function WriteToFileFSO2(textToWrite As String)
Dim txtFile As Object
Dim filePath As String

filePath = ThisWorkbook.Path & "\file.txt"

Open filePath For Output As #1
Print #1, CStr(textToWrite)
Close #1

Debug.Print "Text written to file successfully."
End Function



Function ReadTextFile(filePath As String)
    ' Declare variables
    Dim fileNumber As Integer
    Dim lineText As String
    Dim temp As Variant
    
    ' Initialize variables
    fileNumber = FreeFile

    
    ' Open the text file for reading
    Open filePath For Input As #fileNumber
    
    ' Loop until end of file
    Do While Not EOF(fileNumber)
        Line Input #fileNumber, lineText ' Read a line of text
        ' Write the text into the worksheet
        If temp = "" Then
            temp = lineText
        Else
            temp = temp & Chr(10) & lineText
        End If
    Loop
    
    ' Close the text file
    Close #fileNumber
    ReadTextFile = temp

End Function



Public Function URLEncode(ByRef txt As String) As String
    Dim buffer As String, I As Long, c As Long, n As Long
    buffer = String$(Len(txt) * 12, "%")
 
    For I = 1 To Len(txt)
        c = AscW(Mid$(txt, I, 1)) And 65535
 
        Select Case c
            Case 48 To 57, 65 To 90, 97 To 122, 45, 46, 95  ' Unescaped 0-9A-Za-z-._ '
                n = n + 1
                Mid$(buffer, n) = ChrW(c)
            Case Is <= 127            ' Escaped UTF-8 1 bytes U+0000 to U+007F '
                n = n + 3
                Mid$(buffer, n - 1) = Right$(Hex$(256 + c), 2)
            Case Is <= 2047           ' Escaped UTF-8 2 bytes U+0080 to U+07FF '
                n = n + 6
                Mid$(buffer, n - 4) = Hex$(192 + (c \ 64))
                Mid$(buffer, n - 1) = Hex$(128 + (c Mod 64))
            Case 55296 To 57343       ' Escaped UTF-8 4 bytes U+010000 to U+10FFFF '
                I = I + 1
                c = 65536 + (c Mod 1024) * 1024 + (AscW(Mid$(txt, I, 1)) And 1023)
                n = n + 12
                Mid$(buffer, n - 10) = Hex$(240 + (c \ 262144))
                Mid$(buffer, n - 7) = Hex$(128 + ((c \ 4096) Mod 64))
                Mid$(buffer, n - 4) = Hex$(128 + ((c \ 64) Mod 64))
                Mid$(buffer, n - 1) = Hex$(128 + (c Mod 64))
            Case Else                 ' Escaped UTF-8 3 bytes U+0800 to U+FFFF '
                n = n + 9
                Mid$(buffer, n - 7) = Hex$(224 + (c \ 4096))
                Mid$(buffer, n - 4) = Hex$(128 + ((c \ 64) Mod 64))
                Mid$(buffer, n - 1) = Hex$(128 + (c Mod 64))
        End Select
    Next
    URLEncode = Left$(buffer, n)
End Function

Function M_Transpose(inputArray As Variant) As Variant

Dim outputArray() As Variant
Dim numRows As Long, numCols As Long
Dim I As Long, j As Long

numRows = UBound(inputArray, 2)
numCols = UBound(inputArray, 1)

ReDim outputArray(1 To numRows, 1 To numCols)
For I = 1 To numRows
    For j = 1 To numCols
        outputArray(I, j) = inputArray(j, I)
    Next j
Next I
M_Transpose = outputArray
End Function

Function Get_Date()
Dim Temp_Date As String
Temp_Date = CalendarForm.GetDate(FirstDayOfWeek:=Monday, SaturdayFontColor:=RGB(250, 0, 0), SundayFontColor:=RGB(250, 0, 0))
If Temp_Date <> "12:00:00 AM" And Temp_Date <> "00:00:00" Then
    Get_Date = Format(Temp_Date, "dd-mmm-yyyy")
End If
End Function